% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sepiraRegAct.R
\name{sepiraRegAct}
\alias{sepiraRegAct}
\title{Infer TF activity from gene expression/ DNA methylation profile}
\usage{
sepiraRegAct(
  data,
  type = c("mRNA", "DNAm"),
  regnet,
  norm = c("c", "z"),
  ncores = 4
)
}
\arguments{
\item{data}{A gene expression or DNA methylation data matrix, with rows referring to genes and columns to samples.}

\item{type}{A character, "mRNA" for gene expression data; "DNAm" for DNA methylation data.}

\item{regnet}{A matrix, the regulatory network inferred from \code{sepiraInfNet} function.}

\item{norm}{A character indicating the method used to normalize your input data set, "c" for "centering"; "z" for "z-score normalization".}

\item{ncores}{A numeric, the number of cores to use. See \code{mclapply}.}
}
\value{
A matrix of TF activity score with rows referring to TFs, columns to samples.
}
\description{
\code{sepiraRegAct} calculates TF activity scores in user input data set. It could be a gene expression dataset or a DNA methylation dataset
}
\details{
\code{sepiraRegAct} is one of the two main functions in \code{SEPIRA} package. It takes the output regulatory network from \code{sepiraInfNet} as input, and computes the activity of all TFs in this network from user provided \code{data}.

The \code{data} matrix could be gene expression data or DAN methylation data, with rows are genes and columns are samples. Duplicated row names are not allowed, so you should average the these rows before running \code{sepiraRegAct}.

Note that it's very important that you use the same gene identifier through out the whole analysis.
}
\examples{
# gene expression dataset
data("GeneExp")
# TFs
data("TFeid")
# run the function
cf <- "Blood"
coln <- colnames(GeneExp)
degth <- c(0.3,0.3) # 'degth = c(0.05, 0.05)' is recommended
net.o <- sepiraInfNet(GeneExp,coln,"Lung",cf,TFeid,sigth=0.05,degth=degth,minNtgts=5,ncores=1)
# normalized LSCC DNAm data set from TCGA
data("LUSCmeth")
# estimate TF activity
TFact.lusc <- sepiraRegAct(LUSCmeth,type="DNAm",regnet=net.o$netTOI,norm="z",ncores=1)
TFact.gtex <- sepiraRegAct(GeneExp,type="exp",regnet=net.o$netTOI,norm="z",ncores=1)
}
